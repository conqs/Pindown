{"name":"Pindown","tagline":"Pinterest board downloader","body":"Pindown\r\n=========\r\n\r\nPindown is an unofficial Pinterest board downloader written in PHP. It fetches all pins from a target board (at the highest possible resolution) and displays it in a page, which can then be downloaded by a browser. \r\n\r\nPin description are stored in the 'title' attribute in the image.\r\n\r\nUsage\r\n-\r\n\r\n1. Open page with the fields (*board, token*) supplied. (e.g. `/pindown.php?board=yourBoardId&token=yourAccessToken` )\r\n2. Save the page the way you like it (Usually with your browser's \"Save as..\")\r\n\r\nObtaining Board ID\r\n-\r\n1. Open `http://pinterest.com/` (Ensure that you are already logged in)\r\n2. View source and search for `<div class=\"BoardList\">`\r\n3. You should see `<li data=\"000000000000000000\">` and your board name(s) below in a `<span>`\r\n4. The numbers in the `data=\"000000000000000000\"` is the Board ID\r\n\r\nObtaining Access Token\r\n-\r\nAs Pinterest does not have a public API, there is no way *(yet?)* to generate an access token. To obtain my token, I set up a man-in-the-middle attack on the iOS Pinterest Client using [Fiddler2](http://www.fiddler2.com/fiddler2/) and [iOS-SSL-Killswitch](https://github.com/iSECPartners/ios-ssl-kill-switch). When successful, you should be able to see the token `access_token` in the query string when the Pinterest Client makes a request.\r\n\r\nScreenshots\r\n-\r\nPindown in browser (note that pins are of high resolution)\r\n\r\n![Pindown in browser](https://raw.github.com/jglim/Pindown/master/screenshot1.png)\r\n\r\nPin images in Windows Explorer\r\n\r\n![Pin images in Windows Explorer](https://raw.github.com/jglim/Pindown/master/screenshot2.png)\r\n\r\nLicense\r\n-\r\n\r\nMIT\r\n  \r\n    ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}